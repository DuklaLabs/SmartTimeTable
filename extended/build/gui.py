
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Majrich\Documents\Code\SmartTimeTable\extended\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1024x600")
window.configure(bg = "#FFFFFF")
window.title("SmartTimeTable")
window.attributes("-fullscreen", True)


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 1200,
    width = 2000,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    1024.0,
    600.0,
    fill="#2F2F2F",
    outline="")

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    901.0,
    425.0,
    image=image_image_1
)


dragging = False
last_x_position = 0

def start_drag(event):
    global dragging, last_x_position
    # Check if the mouse is over image_1
    overlapping = canvas.find_overlapping(event.x - 1, event.y - 1, event.x + 1, event.y + 1)
    if image_1 in overlapping:
        dragging = True
        last_x_position = event.x

def drag(event):
    global dragging, last_x_position
    if dragging:
        # Calculate how much the mouse moved
        x_movement = event.x - last_x_position
        # Get the current position of image_1
        current_position = canvas.coords('image_1')
        # Check if the new position is within the desired range
        if 90 <= current_position[0] + x_movement <= 901:
            # Move image_1 and the text
            canvas.move('image_1', x_movement, 0)
            canvas.move('text', x_movement, 0)
        last_x_position = event.x

def stop_drag(event):
    global dragging
    dragging = False

# Bind the events to the functions
canvas.bind("<Button-1>", start_drag)
canvas.bind("<B1-Motion>", drag)
canvas.bind("<ButtonRelease-1>", stop_drag)



image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    37.0,
    425.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    38.0,
    447.0,
    image=image_image_3
)

canvas.create_text(
    7.0,
    220.0,
    anchor="nw",
    text="27.12.",
    fill="#D3D3D3",
    font=("Inter", 23 * -1)
)

canvas.create_text(
    7.0,
    345.0,
    anchor="nw",
    text="28.12.",
    fill="#D3D3D3",
    font=("Inter", 23 * -1)
)

canvas.create_text(
    7.0,
    595.0,
    anchor="nw",
    text="30.12.",
    fill="#D3D3D3",
    font=("Inter", 23 * -1)
)

canvas.create_text(
    7.0,
    470.0,
    anchor="nw",
    text="29.12.",
    fill="#D3D3D3",
    font=("Inter", 23 * -1)
)

canvas.create_text(
    7.0,
    720.0,
    anchor="nw",
    text="31.12.",
    fill="#D3D3D3",
    font=("Inter", 23 * -1)
)

canvas.create_text(
    703.0,
    17.0,
    anchor="nw",
    text="12:00   31.12.2024",
    fill="#B5B5B5",
    font=("Inter", 33 * -1)
)

canvas.create_rectangle(
    0.0,
    525.0,
    1024.0,
    600.0,
    fill="#2F2F2F",
    outline="")

canvas.create_text(
    128.0,
    150.0,
    anchor="nw",
    text="0.XX\nYy",
    fill="#D3D3D3",
    font=("Inter Light", 26 * -1)
)

canvas.create_text(
    75.0,
    150.0,
    anchor="nw",
    text="XXc",
    fill="#D3D3D3",
    font=("Inter Light", 30 * -1)
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    986.0,
    562.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    988.0,
    563.0,
    image=image_image_5
)

canvas.create_text(
    30.0,
    6.0,
    anchor="nw",
    text="IT Laborato≈ô 46",
    fill="#D3D3D3",
    font=("Inter Medium", 50 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=887.0,
    y=535.0,
    width=45.0,
    height=55.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(
    x=632.0,
    y=540.0,
    width=150.0,
    height=45.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_3 clicked"),
    relief="flat"
)
button_3.place(
    x=452.0,
    y=540.0,
    width=150.0,
    height=45.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_4 clicked"),
    relief="flat"
)
button_4.place(
    x=272.0,
    y=540.0,
    width=150.0,
    height=45.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_5 clicked"),
    relief="flat"
)
button_5.place(
    x=43.0,
    y=540.0,
    width=150.0,
    height=45.0
)
window.resizable(False, False)
window.mainloop()
